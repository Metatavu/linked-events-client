/**
 * Linked Events information API
 * Linked Events provides categorized data on events and places using JSON-LD format.  Events can be searched by date and location. Location can be exact address or larger area such as neighbourhood or borough  JSON-LD format is streamlined using include mechanism. API users can request that certain fields are included directly into the result, instead of being hyperlinks to objects.  Several fields are multilingual. These are implemented as object with each language variant as property. In this specification each multilingual field has (fi,sv,en) property triplet as example.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 */


import ApiClient from '../ApiClient';





/**
* The Image model module.
* @module model/Image
* @version 0.0.1
*/
export default class Image {
    /**
    * Constructs a new <code>Image</code>.
    * Images are used as pictures for events, places and organizers.
    * @alias module:model/Image
    * @class
    * @param url {String} The image file URL.
    */

    constructor(url) {
        

        
        

        this['url'] = url;

        
    }

    /**
    * Constructs a <code>Image</code> from a plain JavaScript object, optionally creating a new instance.
    * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
    * @param {Object} data The plain JavaScript object bearing properties of interest.
    * @param {module:model/Image} obj Optional instance to populate.
    * @return {module:model/Image} The populated <code>Image</code> instance.
    */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Image();

            
            
            

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'Number');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('publisher')) {
                obj['publisher'] = ApiClient.convertToType(data['publisher'], 'String');
            }
            if (data.hasOwnProperty('created_time')) {
                obj['created_time'] = ApiClient.convertToType(data['created_time'], 'Date');
            }
            if (data.hasOwnProperty('last_modified_time')) {
                obj['last_modified_time'] = ApiClient.convertToType(data['last_modified_time'], 'Date');
            }
            if (data.hasOwnProperty('created_by')) {
                obj['created_by'] = ApiClient.convertToType(data['created_by'], 'String');
            }
            if (data.hasOwnProperty('last_modified_by')) {
                obj['last_modified_by'] = ApiClient.convertToType(data['last_modified_by'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('cropping')) {
                obj['cropping'] = ApiClient.convertToType(data['cropping'], 'String');
            }
            if (data.hasOwnProperty('license')) {
                obj['license'] = ApiClient.convertToType(data['license'], 'String');
            }
        }
        return obj;
    }

    /**
    * image id
    * @member {Number} id
    */
    id = undefined;
    /**
    * @member {String} name
    */
    name = undefined;
    /**
    * The organization responsible for the image.
    * @member {String} publisher
    */
    publisher = undefined;
    /**
    * Creation time for the image.
    * @member {Date} created_time
    */
    created_time = undefined;
    /**
    * Time this image was modified in the datastore behind the API (not necessarily in the originating system)
    * @member {Date} last_modified_time
    */
    last_modified_time = undefined;
    /**
    * URL reference to the user that created this record (user endpoint)
    * @member {String} created_by
    */
    created_by = undefined;
    /**
    * URL reference to the user that last modfied this record (user endpoint)
    * @member {String} last_modified_by
    */
    last_modified_by = undefined;
    /**
    * The image file URL.
    * @member {String} url
    */
    url = undefined;
    /**
    * Cropping data for the image.
    * @member {String} cropping
    */
    cropping = undefined;
    /**
    * License data for the image. May be \"cc_by\" (default) or \"event_only\". The latter license restricts use of the image and is specified on the API front page.
    * @member {String} license
    */
    license = undefined;








}


