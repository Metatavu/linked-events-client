/*
 * Linked Events information API
 * Linked Events provides categorized data on events and places using JSON-LD format.  Events can be searched by date and location. Location can be exact address or larger area such as neighbourhood or borough  JSON-LD format is streamlined using include mechanism. API users can request that certain fields are included directly into the result, instead of being hyperlinks to objects.  Several fields are multilingual. These are implemented as object with each language variant as property. In this specification each multilingual field has (fi,sv,en) property triplet as example.
 *
 * OpenAPI spec version: v1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package fi.metatavu.linkedevents.client;

import fi.metatavu.linkedevents.client.model.*;

import fi.metatavu.linkedevents.client.model.InlineResponse200;
import java.time.OffsetDateTime;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2017-06-02T10:02:28.547+03:00")
public class SearchApi {

  private ApiClient client;
  private String baseUrl;

  public SearchApi(String baseUrl, ApiClient client) {
    this.client = client;
    this.baseUrl = baseUrl;
  }
  
  /**
   * Search through events and places
   * Search endpoint is for searching through events and places, returning resources that match the given search criteria. The resource type (Event or Place) is returned in the &#x60;resource_type&#x60; attribute. The results are sorted by relevancy score. If no time filter (&#x60;start&#x60; or &#x60;end&#x60;) is supplied, the relevancy score will decay over time so that events that are closer to today will get a higher score.
   * @param page request particular page in paginated results (optional)
   * @param pageSize request that server delivers page_size results in response (optional)
   * @param type Comma-delimited list of resource types to search for. Currently allowed values are &#x60;event&#x60; and &#x60;place&#x60;. (optional)
   * @param q Search for events matching this string. Mutually exclusive with &#x60;input&#x60; typeahead search. (optional)
   * @param input Return autocompletition suggestions for this string. Mutually exclusive with &#x60;q&#x60; full-text search. (optional)
   * @param start Search for events beginning or ending after this time. Dates can be specified using ISO 8601 (\&quot;2016-01-12\&quot;) and additionally \&quot;today\&quot;. (optional)
   * @param end Search for events beginning or ending before this time. Dates can be specified using ISO 8601 (\&quot;2016-01-12\&quot;) and additionally \&quot;today\&quot;. (optional)
   */
  public ApiResponse<InlineResponse200> eventSearch(Integer page, Integer pageSize, String type, String q, String input, OffsetDateTime start, OffsetDateTime end) {
    Map<String, Object> queryParams = new HashMap<>();
    Map<String, Object> formParams = new HashMap<>();
    if (page != null)
    queryParams.put("page", page);
if (pageSize != null)
    queryParams.put("page_size", pageSize);
if (type != null)
    queryParams.put("type", type);
if (q != null)
    queryParams.put("q", q);
if (input != null)
    queryParams.put("input", input);
if (start != null)
    queryParams.put("start", start);
if (end != null)
    queryParams.put("end", end);
    
        
    String requestPath = String.format("%s/search/", baseUrl);
      
    ResultType<InlineResponse200> resultType = new ResultType<InlineResponse200>() {};
    return client.doGETRequest(requestPath, resultType, queryParams, formParams);
  }
  
}
